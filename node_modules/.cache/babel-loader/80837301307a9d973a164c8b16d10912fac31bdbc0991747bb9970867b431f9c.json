{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\ReactApp\\\\todo\\\\src\\\\context\\\\todoContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const todoContext = /*#__PURE__*/createContext();\nexport function TodoContextProvider({\n  children\n}) {\n  _s();\n  const [task, setTask] = useState(\"\");\n  const [list, setList] = useState([]);\n  function addTaskHandler(task) {\n    setList(list.push(task));\n    console.log(\"task is : \", task);\n    console.log(\"list is : \", list);\n  }\n  function removeTaskHandler() {}\n  function editTaskHandler() {}\n  const value = {\n    list,\n    setList,\n    addTaskHandler,\n    removeTaskHandler,\n    editTaskHandler\n  };\n  return /*#__PURE__*/_jsxDEV(todoContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n_s(TodoContextProvider, \"AB2Nl8+/LIdz+PKG0qAawAX/5sI=\");\n_c = TodoContextProvider;\nvar _c;\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","todoContext","TodoContextProvider","children","_s","task","setTask","list","setList","addTaskHandler","push","console","log","removeTaskHandler","editTaskHandler","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/ReactApp/todo/src/context/todoContext.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const todoContext = createContext();\r\n\r\nexport function TodoContextProvider({ children }) {\r\n  \r\n  const [task,setTask]=useState(\"\")\r\n  const[list,setList]=useState([]);\r\n\r\n\r\n  function addTaskHandler(task){\r\n    setList(list.push(task));\r\n    console.log(\"task is : \",task)\r\n    console.log(\"list is : \",list)\r\n  }\r\n\r\n  function removeTaskHandler(){\r\n\r\n  }\r\n\r\n  function editTaskHandler(){\r\n\r\n  }\r\n\r\n\r\n  const value = {\r\n    list,\r\n    setList,\r\n    addTaskHandler,\r\n    removeTaskHandler,\r\n    editTaskHandler\r\n  };\r\n\r\n  return <todoContext.Provider value={value}>{children}</todoContext.Provider>;\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAE1C,OAAO,SAASK,mBAAmBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAEhD,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAK,CAACS,IAAI,EAACC,OAAO,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EAGhC,SAASW,cAAcA,CAACJ,IAAI,EAAC;IAC3BG,OAAO,CAACD,IAAI,CAACG,IAAI,CAACL,IAAI,CAAC,CAAC;IACxBM,OAAO,CAACC,GAAG,CAAC,YAAY,EAACP,IAAI,CAAC;IAC9BM,OAAO,CAACC,GAAG,CAAC,YAAY,EAACL,IAAI,CAAC;EAChC;EAEA,SAASM,iBAAiBA,CAAA,EAAE,CAE5B;EAEA,SAASC,eAAeA,CAAA,EAAE,CAE1B;EAGA,MAAMC,KAAK,GAAG;IACZR,IAAI;IACJC,OAAO;IACPC,cAAc;IACdI,iBAAiB;IACjBC;EACF,CAAC;EAED,oBAAOd,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAZ,QAAA,EAAEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E;AAAChB,EAAA,CA9BeF,mBAAmB;AAAAmB,EAAA,GAAnBnB,mBAAmB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}